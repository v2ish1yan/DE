# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go build

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          go build -v  -o DE.exe ./main.go
        elif [[ "${{ runner.os }}" == "macOS" ]]; then
          go build -v  -o DE_macos ./main.go
        else
          go build -v  -o DE_linux ./main.go
        fi

    - name: Upload Release Assets (macOS)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: DE_macos.exe
        asset_name: DE_macos.exe
        asset_content_type: application/octet-stream

    - name: Upload Release Assets (Windows)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: DE.exe
        asset_name: DE.exe
        asset_content_type: application/octet-stream

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }} 
        asset_path: DE_linux
        asset_name: DE_linux
        asset_content_type: application/octet-stream
